#BlueJ class context
comment0.params=
comment0.target=Rules()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ CheckersRules\r\n
comment1.params=board\ pieces\ activePiece\ startX\ startY\ endX\ endY\ whiteActive\ isMove
comment1.target=java.lang.Boolean\ validMove(javax.swing.JPanel[][],\ java.util.ArrayList,\ Piece,\ int,\ int,\ int,\ int,\ boolean,\ java.lang.Boolean)
comment10.params=pieces
comment10.target=int\ blackKingY(java.util.ArrayList)
comment11.params=board\ pieces
comment11.target=boolean\ blackCheck(javax.swing.JPanel[][],\ java.util.ArrayList)
comment12.params=board\ pieces
comment12.target=boolean\ whiteCheck(javax.swing.JPanel[][],\ java.util.ArrayList)
comment13.params=board\ pieces
comment13.target=boolean\ whiteCanMove(javax.swing.JPanel[][],\ java.util.ArrayList)
comment14.params=board\ pieces
comment14.target=boolean\ blackCanMove(javax.swing.JPanel[][],\ java.util.ArrayList)
comment15.params=pieces\ x\ y
comment15.target=Piece\ getPiece(java.util.ArrayList,\ int,\ int)
comment2.params=board\ pieces\ activePiece\ startX\ startY\ endX\ endY\ whiteActive\ isMove\ movesMade
comment2.target=java.lang.Boolean\ pieceMoves(javax.swing.JPanel[][],\ java.util.ArrayList,\ Piece,\ int,\ int,\ int,\ int,\ boolean,\ java.lang.Boolean,\ int)
comment3.params=pieces\ x\ y
comment3.target=java.lang.Boolean\ isSpaceEmpty(java.util.ArrayList,\ int,\ int)
comment3.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\ \r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\ \r\n
comment4.params=pieces\ x\ y\ whiteActive
comment4.target=java.lang.Boolean\ isOpponent(java.util.ArrayList,\ int,\ int,\ java.lang.Boolean)
comment5.params=movement
comment5.target=int\ findDirection(int)
comment6.params=game\ pieces\ whiteActive\ board
comment6.target=boolean\ checkWin(java.lang.String,\ java.util.ArrayList,\ boolean,\ javax.swing.JPanel[][])
comment7.params=pieces
comment7.target=int\ whiteKingX(java.util.ArrayList)
comment8.params=pieces
comment8.target=int\ whiteKingY(java.util.ArrayList)
comment9.params=pieces
comment9.target=int\ blackKingX(java.util.ArrayList)
numComments=16
